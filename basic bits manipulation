___________________________________________________________________________________________________________________________________________
I) unique element in an array ,if all the elements are present twice except one

int xor=0;
for(int i=0;i<nums.size();i++) xor = xor^nums[i];
cout<<xor<<endl;

____________________________________________________________________________________________________________________________________________
II) swapping of two numbers a,b without using third variable

a = a^b; 
b = a^b;
a = a^b;

there is an arithematic way to swap two numbers without using third variable
a=a+b;
a=a-b;
b=a-b;
____________________________________________________________________________________________________________________________________________
III) if we have to find xor of numbers from 1 to N
if(n%4==1) return 1;
if(n%4==2) return n+1;
if(n%4==3) return 0;
if(n%4==0) return n;
____________________________________________________________________________________________________________________________________________
IV)  the frequently used bits ideas

i) check bit ----->  if we have to check the i th bit is set or not ,
    we have to create a mask of 1<<i
    and do (&) and with it 
ii)set bit-------> if we set any bit i,in the number 
    we have to create a mask of 1<<i and do or(|) with the number
iii) clear bit----->if we have to clear the i th bit then we willl create the mask as negation of previous masks ~(1<<i)
     and we do and with original number 
iv) clear first set bit ----> do n&(n-1)
v) to check number is power of 2 ---> only 1 set bit  or n&(n-1)==0
vi) count set bit --> 
   int cnt=0;
   while(n!=0){
     n=n&(n-1);
     cnt++;
     }
     time complexity O(setbit)
     
     number of set bit = __builtin_popcount(n);
_________________________________________________________________________________________________________________________________________
